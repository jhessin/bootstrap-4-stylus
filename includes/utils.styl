// a helper to darken or lighten a color
highlight($args...)
  $color = @color
  $percent = 50%
  for $arg in $args
    if $arg is a 'rgba'
      $color = $arg
    if ($arg is a 'unit') and (unit($arg) is '%')
      $percent = $arg
  if light($color)
    darken($color, $percent)
  else
    lighten($color, $percent)

compare($color1, $color2)
  if ($color1 is a 'rgba') and ($color2 is a 'rgba')
    if lightness($color1) > lightness($color2)
      $result = null
      for num in (1%..100%)
        if (not $result) and (lightness($color1) < lightness(lighten($color2, num)))
          $result = s('color1 is %s lighter than color2', num)
      content: $result
    else if lightness($color1) < lightness($color2)
      $result = null
      for num in (1%..100%)
        if (not $result) and (lightness(lighten($color1, num)) > lightness($color2))
          $result = s('color2 is %s lighter than color1', num)
      content: $result

blackorwhite($color, $black = black, $white = white)
  if $color is a 'rgba'
    if light($color)
      $black
    else
      $white

parse($value, $postfix = '', $prefix = '$')
  if ($value is a 'string') or ($value is a 'ident')
    $value = unquote($value)
    $prefix = unquote($prefix)
    $postfix = unquote($postfix)
    convert(s('%s%s%s', $prefix, $value, $postfix))
  else
    null

getThis()
  return split(' ', unquote(selector()))[-1]

getFlags()
  // PARSE ARGUMENTS
  $flags = ()
  for $value in arguments
    if $value is a 'string'
      push($flags, unquote($value))
    else if $value is a 'ident'
      push($flags, $value)
  $flags

getColorSet()
  $colors = {}
  for $value in arguments
    if $value is a 'rgba'
      $colors.color = $value
      $colors.shadow = alpha($value, 0.5)
      $colors.hover = darken($value, 11%)
      $colors.btnHover = darken($value, 8%)
      return $colors
    else
      $parsed = parse($value)
      if $parsed is a 'rgba'
        $colors.color = $parsed
        $parsed = parse($value, 'Shadow')
        if $parsed is a 'rgba'
          $colors.shadow = $parsed
        else
          $colors.shadow = alpha($colors.color, 0.5)
        $parsed = parse($value, 'Hov')
        if $parsed is a 'rgba'
          $colors.hover = $parsed
        else
          $colors.hover = darken($colors.color, 11%)
        $parsed = parse($value, 'BtnHov')
        if $parsed is a 'rgba'
          $colors.btnHover = $parsed
        else
          $colors.btnHover = darken($colors.color, 8%)
        return $colors
      else
        return null

getHash($args, $valueName, $defaultValue = null)
  if $args is a 'object'
    if $args[$valueName]
      return $args[$valueName]
    else
      return $devaultValue
  else if length($args) > 1
    for $value in $args
      if $value is a 'object'
        if $value[$valueName]
          return $value[$valueName]
        else
          return $defaultValue
    return $defaultValue

// A utility to discover what is being passed
discover()
  content: s('length(arguments) = %s', length(arguments))
  content: s('typeof(arguments) = %s', typeof(arguments))
  content: s('arguments = %s', arguments)
  if length(arguments) > 1
    for $key, $value in arguments
      if typeof(arguments) isnt 'object'
        content: s('arguments[%s] = %s', $value, $key)
        content: s('typeof(arguments[%s]) = %s', $value, typeof($key))
        if length($key) > 1
          {$value}
            discover($key)
      else
        content: s('arguments["%s"] = %s', $key, $value)
        content: s('typeof(arguments[%s]) = %s', $key, typeof($value))
        if length($value) > 1
          {$key}
            discover($value)
