btn()
  // PARSE ARGUMENTS
  $flags = ()
  // get the name of this class
  $this = split(' ', unquote(selector()))[-1]
  if arguments is a 'object'
    // get classnames
    for $key, $value in arguments
      if $key is 'focusClass'
        $focusClass = $value
      else if $key is 'disabledClass'
        $disabledClass = $value
      else if $key is 'activeClass'
        $activeClass = $value
      else if $key is 'showClass'
        $showClass = $value
      else if $key is 'toggleClass'
        $toggleClass = $value
  else
    for $value in arguments
      if $value is a 'object'
        for $key, $class in $value
          if $key is 'focusClass'
            $focusClass = $class
          else if $key is 'disabledClass'
            $disabledClass = $class
          else if $key is 'activeClass'
            $activeClass = $class
          else if $key is 'showClass'
            $showClass = $class
          else if $key is 'toggleClass'
            $toggleClass = $class
      else
        push($flags, $value)

  $focusClass := 'focus'
  $disabledClass := 'disabled'
  $activeClass := 'active'
  $showClass := 'show'
  $toggleClass := 'toggle'
  content: $focusClass $disabledClass $activeClass
  // END ARGUMENT PARSE

  if 'link' in $flags
    font-weight: $font-weight-normal
    color: $primary
    border-radius: 0
    &:hover
      border-color: transparent
    &:disabled
      color: $secondary

    &, &:active
    &.{activeClass}
    &:disabled
      background-color: transparent

    &, &:focus
    &:active
      border-color: transparent
      box-shadow: none

    &:focus
    &:hover
      color: #0056b3
      text-decoration: underline
      background-color: transparent

    &:disabled:focus
    &:disabled:hover
      text-decoration: none
  else
    // Default btn
    display inline-block
    font-weight $font-weight-normal
    text-align center
    white-space nowrap
    vertical-align middle
    -webkit-user-select none
    -moz-user-select none
    -ms-user-select none
    user-select none
    border 1px solid transparent
    padding 0.5rem 0.75rem
    font-size 1rem
    line-height 1.25
    border-radius 0.25rem
    transition all 0.15s ease-in-out

    &:focus
    &:hover
      text-decoration none

    &:focus
    &.{$focusClass}
      outline 0
      box-shadow 0 0 0 3px rgba(0, 123, 255, 0.25)

    &:disabled
    &.{$disabledClass}
      opacity .65

    &:active
    &.{$activeClass}
      background-image none


    /
      a{$this}.disabled
      fieldset[disabled] a{$this}
        pointer-events none

      input[type='submit']{$this}
      input[type='reset']{$this}
      input[type='button']{$this}
        width: 100%
      .{showClass}
        & > a
          outline: 0
      [data-toggle='buttons']
        {$this} input [type='radio']
        {$this} input [type='checkbox']
          position: absolute
          clip: rect(0, 0, 0, 0)
          pointer-events: none


    // Handle flags and special cases
    if 'lg' in $flags
      padding 0.5rem 1rem
      font-size 1.25rem
      line-height 1.5
      border-radius 0.3rem

    if 'sm' in $flags
      padding 0.25rem 0.5rem
      font-size 0.875rem
      line-height 1.5
      border-radius 0.2rem

    if 'block' in $flags
      display block
      width 100%
      & + &
        margin-top 0.5rem

    if 'fade' in $flags
      opacity: 0
      transition: opacity 0.15s linear
      &.{$showClass}
        opacity: 1

    if 'collapse' in $flags
      display: none
      position: relative
      height: 0
      overflow: hidden
      transition: height 0.35s ease
      &.{$showClass}
        display: block

      /
        tr
          &.{$showClass}
            display: table-row
        tbody
          &.{$showClass}
            display: table-row-group

    for $value in $flags
      if $value in ('primary' 'secondary' 'success' 'info' 'warning' 'danger' 'light' 'dark')
        $color = parse($value)
        $shadow = parse($value, 'Shadow')
        $hover = parse($value, 'Hov')
        $btnHover = parse($value, 'BtnHov')
      else if $value is a 'rgba'
        $color = $value
        $shadow = alpha($value, 0.5)
        $hover = lighten($value, 20%)
        $btnHover = darken($value, 20%)
      if $color is defined
        &:focus
        &.{$focusClass}
          box-shadow: 0 0 0 3px $shadow
        if 'outline' in $flags
          color: $color
          background-color: transparent
          background-image: none
          border-color: $color
          &:hover
            color: blackorwhite($color)
            background-color: $color
            border-color: $color

          &:disabled
          &{$disabledClass}
            color: $color
            background-color: transparent

          &:active
          &.{$activeClass}
          .{$showClass} > {$this}.{$toggleClass}
            background-color: $color
            color: whiteorblack($color)
            border-color: $color

        else // not outline
          color: blackorwhite($color)
          background-color: $color
          border-color: $color
          &:hover
            color: blackorwhite($color)
            background-color: $btnHover
            border-color: $hover
          &:disabled
          &{$disabledClass}
            background-color: $color
            border-color: $color
          &:active
          &.{$activeClass}
          .{$showClass} > {$this}.{$toggleClass}
            background-color: $btnHover
            background-image: none
            border-color: $hover
